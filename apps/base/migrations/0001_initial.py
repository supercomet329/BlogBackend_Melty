# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-05-23 16:49
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('material', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BloggerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='名称', max_length=20, verbose_name='名称')),
                ('name_en', models.CharField(default='', help_text='名称英文', max_length=20, verbose_name='名称英文')),
                ('desc', models.CharField(default='', help_text='简介', max_length=300, verbose_name='简介')),
                ('avatar', models.ImageField(blank=True, help_text='100*100', null=True, upload_to='base/avatar/image/%y/%m', verbose_name='头像')),
                ('background', models.ImageField(blank=True, help_text='333*125', null=True, upload_to='base/background/image/%y/%m', verbose_name='背景图')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', null=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name_plural': '个人信息列表',
                'verbose_name': '个人信息',
            },
        ),
        migrations.CreateModel(
            name='BloggerMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='名称', max_length=20, verbose_name='名称')),
                ('index', models.IntegerField(default=0, help_text='顺序', verbose_name='顺序')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', null=True, verbose_name='添加时间')),
                ('blogger', models.ForeignKey(help_text='个人', on_delete=django.db.models.deletion.CASCADE, to='base.BloggerInfo', verbose_name='个人')),
                ('master', models.ForeignKey(help_text='技能', on_delete=django.db.models.deletion.CASCADE, to='material.MaterialMaster', verbose_name='技能')),
            ],
            options={
                'verbose_name_plural': '技能信息列表',
                'verbose_name': '技能信息',
            },
        ),
        migrations.CreateModel(
            name='BloggerSocial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='名称', max_length=20, verbose_name='名称')),
                ('index', models.IntegerField(default=0, help_text='顺序', verbose_name='顺序')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', null=True, verbose_name='添加时间')),
                ('blogger', models.ForeignKey(help_text='个人', on_delete=django.db.models.deletion.CASCADE, to='base.BloggerInfo', verbose_name='个人')),
                ('social', models.ForeignKey(help_text='社交平台', on_delete=django.db.models.deletion.CASCADE, to='material.MaterialSocial', verbose_name='社交平台')),
            ],
            options={
                'verbose_name_plural': '社交信息列表',
                'verbose_name': '社交信息',
            },
        ),
        migrations.CreateModel(
            name='FriendLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='名称', max_length=30, verbose_name='名称')),
                ('desc', models.CharField(help_text='简介', max_length=100, verbose_name='简介')),
                ('image', models.ImageField(blank=True, help_text='图片', null=True, upload_to='base/friendlink/image/%y/%m', verbose_name='图片')),
                ('url', models.URLField(help_text='链接', verbose_name='链接')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', null=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name_plural': '友情链接列表',
                'verbose_name': '友情链接',
            },
        ),
        migrations.CreateModel(
            name='NavigationLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='名称', max_length=30, verbose_name='名称')),
                ('desc', models.CharField(help_text='简介', max_length=100, verbose_name='简介')),
                ('image', models.ImageField(blank=True, help_text='图片', null=True, upload_to='base/friendlink/image/%y/%m', verbose_name='图片')),
                ('url', models.CharField(help_text='链接', max_length=200, verbose_name='链接')),
                ('target', models.CharField(blank=True, choices=[('_blank', 'blank - 浏览器总在一个新打开、未命名的窗口中载入目标文档。'), ('_self', 'self - 这个目标的值对所有没有指定目标的 <a> 标签是默认目标，它使得目标文档载入并显示在相同的框架或者窗口中作为源文档。这个目标是多余且不必要的，除非和文档标题 <base> 标签中的 target 属性一起使用。'), ('_parent', 'parent - 这个目标使得文档载入父窗口或者包含来超链接引用的框架的框架集。如果这个引用是在窗口或者在顶级框架中，那么它与目标 _self 等效。'), ('_top', 'top - 这个目标使得文档载入包含这个超链接的窗口，用 _top 目标将会清除所有被包含的框架并将文档载入整个浏览器窗口。')], help_text='对应于a标签中的target属性', max_length=10, null=True, verbose_name='Target类别')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', null=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name_plural': '自定义导航列表',
                'verbose_name': '自定义导航',
            },
        ),
        migrations.CreateModel(
            name='SiteInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='名称', max_length=20, verbose_name='名称')),
                ('name_en', models.CharField(default='', help_text='名称英文', max_length=20, verbose_name='名称英文')),
                ('desc', models.CharField(default='', help_text='简介', max_length=150, verbose_name='简介')),
                ('keywords', models.CharField(default='', help_text='关键字', max_length=300, verbose_name='关键字')),
                ('icon', models.ImageField(blank=True, help_text='图标', null=True, upload_to='base/site/image/%y/%m', verbose_name='图标')),
                ('background', models.ImageField(blank=True, help_text='背景图', null=True, upload_to='base/site/image/%y/%m', verbose_name='背景图')),
                ('api_base_url', models.URLField(max_length=30, verbose_name='API接口BaseURL')),
                ('copyright', models.CharField(default='', help_text='版权', max_length=100, verbose_name='版权')),
                ('copyright_desc', models.CharField(default='', help_text='版权说明中文', max_length=300, verbose_name='版权说明中文')),
                ('copyright_desc_en', models.CharField(default='', help_text='版权说明英文', max_length=300, verbose_name='版权说明英文')),
                ('icp', models.CharField(default='', help_text='ICP', max_length=20, verbose_name='ICP')),
                ('is_live', models.BooleanField(default=False, help_text='是否激活', verbose_name='是否激活')),
                ('is_force_refresh', models.BooleanField(default=False, help_text='是否强制刷新', verbose_name='是否强制刷新')),
                ('access_password', models.CharField(blank=True, help_text='浏览密码', max_length=20, null=True, verbose_name='访问密码')),
                ('access_password_encrypt', models.CharField(blank=True, help_text='访问密码加密', max_length=100, null=True, verbose_name='浏览密码加密')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', null=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name_plural': '网站信息列表',
                'verbose_name': '网站信息',
            },
        ),
        migrations.CreateModel(
            name='SiteInfoNavigation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='名称', max_length=20, verbose_name='名称')),
                ('index', models.IntegerField(default=0, help_text='顺序', verbose_name='顺序')),
                ('add_time', models.DateTimeField(auto_now_add=True, help_text='添加时间', null=True, verbose_name='添加时间')),
                ('navigation', models.ForeignKey(help_text='导航', on_delete=django.db.models.deletion.CASCADE, to='base.NavigationLink', verbose_name='导航')),
                ('site', models.ForeignKey(help_text='网站', on_delete=django.db.models.deletion.CASCADE, to='base.SiteInfo', verbose_name='网站')),
            ],
            options={
                'verbose_name_plural': '导航信息列表',
                'verbose_name': '导航信息',
            },
        ),
        migrations.AddField(
            model_name='siteinfo',
            name='navigations',
            field=models.ManyToManyField(help_text='自定义导航', through='base.SiteInfoNavigation', to='base.NavigationLink', verbose_name='自定义导航'),
        ),
        migrations.AddField(
            model_name='bloggerinfo',
            name='masters',
            field=models.ManyToManyField(through='base.BloggerMaster', to='material.MaterialMaster'),
        ),
        migrations.AddField(
            model_name='bloggerinfo',
            name='socials',
            field=models.ManyToManyField(through='base.BloggerSocial', to='material.MaterialSocial'),
        ),
    ]
